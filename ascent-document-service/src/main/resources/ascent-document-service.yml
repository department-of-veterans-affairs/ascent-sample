server:
  port: ${document-service.server.port:8088}
info:  
  build:
    version:  "@project.version@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"

#Properties to customize Jackson ObjectMapper 
spring:
  jackson:
    serialization-inclusion: NON_EMPTY
    serialization:
      INDENT_OUTPUT: true
  cloud:
    bus:
      enabled: false

#---------------------------------------------------
#   Logging Level for packages
#---------------------------------------------------
logging: 
  level:
    gov:
      va:
        ascent: INFO
    org: 
      springframework: 
        cloud.sleuth.log: INFO
        cloud.sleuth: INFO
        cloud.sleuth.instrument.web: INFO
        security: INFO
        ws: INFO
        cache: INFO
      apache:
        http: 
          impl.client: INFO
security:
  user:
    name: ${ascent.security.username:admin}
    password: ${ascent.security.password:default}
management.health.rabbit.enabled: false
management.health.redis.enabled: false
#sanitize properties for keys when using /configprops.
endpoints:
  configprops:
    keys-to-sanitize: 'enabled, password'

#  hystrix command overrides
hystrix:
  # set the hystrix.shareSecurityContext property to true. Doing so will auto configure an Hystrix concurrency strategy 
  # plugin hook who will transfer the SecurityContext from your main thread to the one used by the Hystrix command
  shareSecurityContext: true
  command:
    default:
      metrics:
        rollingStats:
          # This property sets the duration of the statistical rolling window, in milliseconds. 
          # This is how long Hystrix keeps metrics for the circuit breaker to use and for publishing 
          # Default Value: 10000
          timeInMilliseconds: 20000
        # This property sets the time to wait, in milliseconds, between allowing health snapshots to be taken that calculate 
        # success and error percentages and affect circuit breaker status. 
        # Default Value: 500
        healthSnapshot: 
          intervalInMilliseconds: 1000
      circuitBreaker:
        # This property sets the amount of time, after tripping the circuit, to reject requests 
        # before allowing attempts again to determine if the circuit should again be closed.
        # Default Value: 5000
        sleepWindowInMilliseconds: 10000
        # This property sets the minimum number of requests in a rolling window that will trip the circuit.
        # Default Value: 20
        requestVolumeThreshold: 4
      execution:
        isolation:
          thread:
            # This property sets the time in milliseconds after which the caller will observe a timeout and walk away from the 
            # command execution. Hystrix marks the HystrixCommand as a TIMEOUT, and performs fallback logic. Note that there 
            # is configuration for turning off timeouts per-command, if that is desired (see command.timeout.enabled). 
            # IMPORTANT NOTE: THIS TIMEOUT VALUE MUST BE GREATER THAN ANY SERVICE TIMEOUT TO AVOID ERRORS
            # Default Value: 1000
            timeoutInMilliseconds: 20000    

# Sleuth configuration     
# To skip specific patterns being exported, added few more customs on top of default skip pattern
# see org.springframework.cloud.sleuth.instrument.web.TraceFilter.DEFAULT_SKIP_PATTERN
spring.sleuth.web.skipPattern: (/api/.*/webjars.*|/api/.*/v2/api-docs.*|/api/.*/swagger-resources.*|/api/.*/swagger-ui.*|/api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream)
#Property configuration to enable or disable JWT security for service calls 
ascent:
  security:
    jwt:
      enabled: false
      filter-process-url: /v?/**
  swagger:
    title: Ascent Document Service v1 API Documentation
    description: API Error Keys <a href="swagger/error-keys.html">error keys</a>
    groupName: document-v1
    version: ${info.build.version}
    securePaths: /api/.*/v?.*|/v[0-9]/?.*
---
spring.profiles: default,local-int
spring.profiles.include: remote_client_sims, embedded-aws
spring:
  sleuth:
    stream:
      enabled: false
--- 

# tomcat upload file configuration
spring:
  http:
   multipart:
    max-file-size: 25MB
    max-request-size: 26MB
---
## S3 and SQS Configurations for Ascent   
ascent:
  aws:
    localstack-config:
      s3:
        endpoint: http://localhost:4572/
      services:
        - name: s3
          port: 4572
        - name: sqs
          port: 4576 
    access_key_id: ${AWS_ACCESS_KEY}
    secret_access_key: ${AWS_SECRET_ACCESS_KEY}
  s3:
    bucket: ${AWS_S3_BUCKET_NAME}
    region: ${AWS_REGION:us-west-2}
    target:
      bucket: ${AWS_S3_TARGET_BUCKET_NAME}
    dlq:
      bucket: ${AWS_S3_DLQ_BUCKET_NAME}
  sqs:
    region: ${AWS_SQS_REGION:us-west-2}
    endpoint: ${AWS_SQS_ENDPOINT}
    dlqendpoint: ${AWS_SQS_DLQ_ENDPOINT}
    dlqRetriesCount: 2
    numberOfMessagesToPrefetch: ${AMAZON_SQS_NUMBER_OF_MESSAGES_TO_PREFETCH:5}

cloud.aws.stack.auto: false
cloud.aws.region.static: ${AWS_REGION:us-west-2}